import Head from 'next/head';
import { getPostsByPage, getPostsForTopPage } from '../../../../lib/notionAPI';
import SinglePost from '../../../../components/Post/SinglePost ';
import { GetStaticProps } from 'next';

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [{ params: { page: '1' } }, { params: { page: '2' } }],
    fallback: 'blocking',
  };
};

// export const getPostsByPage = async (page: number) => {
//   const allPosts = await getAllPosts();

//   const startIndex = (page - 1) * NUMBER_OF_POSTS_PER_PAGE;
//   const endIndex = startIndex + NUMBER_OF_POSTS_PER_PAGE;

//   return allPosts.slice(startIndex, endIndex);
// };

export const getStaticProps: GetStaticProps = async (context) => {
  const currentPage = context.params?.page;
  const postsByPage = await getPostsByPage(
    parseInt(currentPage.toString(), 10)
  );

  return {
    props: {
      postsByPage,
    },
    revalidate: 60, // 60秒ごとに内容を更新
  };
};

const BlogPageList = ({ postsByPage }) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">
          Notion Blog🪐🤩🫀
        </h1>
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {postsByPage.map((post) => (
            <div key={post.slug}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPagenationPage={true}
              />
            </div>
          ))}
        </section>
      </main>
    </div>
  );
};

export default BlogPageList;
